# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Vite Github Pages Deployer
        # You may pin to the exact commit or the version.
        # uses: skywarth/vite-github-pages-deployer@ec2e9a434804544a618cf2e0ffd9fc41ddf0b50c
        uses: skywarth/vite-github-pages-deployer@v1.5.0
        with:
          public_base_path: /hlf-chaincode-builder
          # Which folder do you want your Github Page to use as root directory. Usually it is your build output directory such as ./dist 
          build_path: # optional, default is ./dist
          # Node env that will be used for the installation of dependencies. It is imperative you use an environment that has 'vite' as dependency. Commonly, that is 'dev'.
          install_phase_node_env: # optional, default is dev
          build_phase_node_env: # optional, default is production
          package_manager: yarn
          artifact_name: # optional, default is github-pages
          debug_mode: # optional, default is false
          working_path: ./
            
